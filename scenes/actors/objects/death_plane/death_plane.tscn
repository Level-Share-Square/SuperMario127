[gd_scene load_steps=6 format=2]

[ext_resource path="res://classes/camera_stopper.gd" type="Script" id=3]

[sub_resource type="GDScript" id=4]
resource_local_to_scene = true
script/source = "extends GameObject

onready var area = $Area2D
onready var collision_shape = $Area2D/CollisionShape2D
onready var camera_stopper = $CameraStopper
onready var camera_stop_shape = $CameraStopper/CollisionShape2D
onready var sprite = $Sprite


var parts := 1
export var stops_camera := true
export var vertical := false

var last_parts := 1

func _set_properties():
	savable_properties = [\"parts\", \"stops_camera\", \"vertical\"]
	editable_properties = [\"parts\", \"stops_camera\", \"vertical\"]

func _set_property_values():
	set_property(\"parts\", parts, 1)
	set_property(\"stops_camera\", stops_camera)
	set_property(\"vertical\", vertical)
	
func _input(event):
	if event is InputEventMouseButton and event.is_pressed() and hovered:
		if event.button_index == 5: # Mouse wheel down
			parts -= 1
			if parts < 1:
				parts = 1
			set_property(\"parts\", parts, true)
		elif event.button_index == 4: # Mouse wheel up
			parts += 1
			set_property(\"parts\", parts, true)

	
func _ready():
	if mode != 1:
		var _connect = area.connect(\"body_entered\", self, \"kill\")
		sprite.visible = false
		camera_stopper.monitorable = stops_camera
	else:
		var _connect2 = connect(\"property_changed\", self, \"update_property\")
		camera_stopper.visible = stops_camera
	if parts < 1:
		parts = 1
	update_property(\"vertical\", vertical)
	camera_stopper.set_size(camera_stop_shape.shape.extents)
	
	
func update_property(key, value):
	match(key):
		\"parts\":
			if value < 1:
				parts = 1
				return
			update_parts()
		\"vertical\":
			if vertical:
				sprite.rect_size.x = 32
				sprite.rect_position.x = -16
				collision_shape.shape.extents.x = 16
				camera_stop_shape.shape.extents.x = 52
			else:
				sprite.rect_size.y = 32
				sprite.rect_position.y = -16
				collision_shape.shape.extents.y = 16
				camera_stop_shape.shape.extents.y = 52
			update_parts()
		\"rotation_degrees\":
			rotation_degrees = 0
		\"stops_camera\":
			camera_stopper.visible = stops_camera
			
func update_parts():
	if vertical:
		sprite.rect_size.y = parts * 32
		sprite.rect_position.y = (-16 * parts)
		collision_shape.shape.extents.y = 16 * parts
		camera_stop_shape.shape.extents.y = collision_shape.shape.extents.y + 26
	else:
		sprite.rect_size.x = parts * 32
		sprite.rect_position.x = (-16 * parts)
		collision_shape.shape.extents.x = 16 * parts
		camera_stop_shape.shape.extents.x = collision_shape.shape.extents.x + 26
		
func kill(body):
	if enabled and body.name.begins_with(\"Character\") and !body.dead and body.controllable:
		if stops_camera:
			body.sprite.visible = false
			body.kill(\"fall\")
		else:
			body.kill(\"green_demon\")
		enabled = false
		
		
				
	
	

			

"

[sub_resource type="RectangleShape2D" id=1]
resource_local_to_scene = true
extents = Vector2( 16, 16 )

[sub_resource type="StreamTexture" id=3]
resource_local_to_scene = true
load_path = "res://.import/death_plane.png-063ca5d276d6a22b00b0dffad627c315.stex"

[sub_resource type="RectangleShape2D" id=2]
resource_local_to_scene = true
extents = Vector2( 42, 52 )

[node name="DeathPlane" type="Node2D"]
script = SubResource( 4 )

[node name="Area2D" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 1 )

[node name="Sprite" type="NinePatchRect" parent="."]
margin_left = -16.0
margin_top = -16.0
margin_right = 16.0
margin_bottom = 16.0
texture = SubResource( 3 )
region_rect = Rect2( 0, 0, 32, 32 )
axis_stretch_horizontal = 1
axis_stretch_vertical = 1

[node name="CameraStopper" type="Area2D" parent="."]
script = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="CameraStopper"]
shape = SubResource( 2 )
